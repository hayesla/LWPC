import numpy as np
import matplotlib.pyplot as plt
plt.ion()
import datetime
from reading_msk_files import read_files
from pandas import Series
from sunpy.time import parse_time
from scipy import ndimage
smooth = ndimage.filters.uniform_filter
from sunpy import lightcurve as lc
###lwpc data##
'''
res = np.loadtxt('results_23_jul.dat', dtype = 'str')
date = 'Jul/24/2016'
res = np.array(res)
tim = []
for i in range(len(res)):
    tim.append(datetime.datetime.strptime(date+' '+res[:,0][i], '%b/%d/%Y %H:%M'))
pha_lwpc = res[:,1]
amp_lwpc = res[:,2]

lwpc_amp = Series(amp_lwpc, index = tim)
lwpc_pha = Series(pha_lwpc, index = tim)

'''
###msk data ##

name, msk_time, amp, pha = read_files('NAA20160723.txt', '2016-07-23 00:00')

msk_amp = Series(amp, index = msk_time)+107
msk_pha = Series(pha, index = msk_time)


name1, msk_time1, amp1, pha1 = read_files('NAA20160724.txt', '2016-07-24 00:00')

msk_amp_real = Series(amp1, index = msk_time1)+107
msk_pha_real = Series(pha1, index = msk_time1)


name2, msk_time2, amp2, pha2 = read_files('NAA120160724.txt', '2016-07-24 00:00')

msk_amp_real2 = Series(amp2, index = msk_time2)+107
msk_pha_real2 = Series(pha2, index = msk_time2)

msk_amp_flare = msk_amp_real.truncate('2016-07-24 11:00','2016-07-24 17:00')
msk_pha_flare = msk_pha_real.truncate('2016-07-24 11:00','2016-07-24 17:00')

g = lc.GOESLightCurve.create(msk_amp_flare.index[0], msk_amp_flare.index[-1])
gl = g.data['xrsb']
gs = g.data['xrsa']

res = np.loadtxt('h_and_beta.dat')
h_prime = res[:,0]
beta = res[:,1]
phase = res[:,2]
amp = res[:,3]
dist = res[:,4]



test_a = msk_amp_flare.resample('2min', how = 'mean')
indexx = []
for i in range(len(test_a)):
    yy = (amp - test_a[i])**2
    ind = np.where(yy == np.min(yy))[0][0]
    indexx.append(ind)

h_prime_model = h_prime[indexx]
beta_model = beta[indexx]


fig, ax = plt.subplots(3, sharex=True)
ax[0].plot(test_a, label = 'MSK Amp')
ax[1].plot(test_a.index, h_prime_model, label = 'H prime')
ax[2].plot(test_a.index, beta_model, label = 'beta')






'''

h_values = np.arange(55, 85, 0.1)
b_values = np.arange(0.2, 0.5, 0.001)

test = np.arange(0, 90000, 300)
new = []
for i in range(len(test)):
	if test[i]!= 89700:
		new.append(amp[test[i]:test[i+1]])
	else:
		new.append(amp[test[i]:])


new = np.array(new)
'''
'''
full_chi = []
for i in range(len(msk_pha)):
	chi = (-new + msk_amp[i])**2
	full_chi.append(chi)

plt.contourf(b_values, h_values, fu, cmap = 'magma')'''













#test_array = smooth(msk_amp[1500:2000], 20)

plot_msk = False
if plot_msk:
    fig, ax = plt.subplots(3, sharex = True)
    ax[0].plot(gl.index, gl, label = 'GOES 1-8 $\mathrm{\AA}$')
    ax[0].legend()
    ax[0].set_title('GOES and ULTRA MSK')
    ax[0].set_ylabel('Flux $W/m^{-2}$')

    ax[1].plot(msk_amp_flare, label = 'MSK Amp', color = 'g')
    ax[1].legend()
    ax[1].set_ylabel('Amplitude dBV/m')

    ax[2].plot(msk_pha_flare, label = 'MSK Phase', color = 'r')
    ax[2].legend()
    ax[2].set_ylabel('Phase (degrees)')
    ax[2].set_xlabel('Start time: 2016-07-24 11:00 UT')
